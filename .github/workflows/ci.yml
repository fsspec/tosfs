# ByteDance Volcengine EMR, Copyright 2024.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CI-FNS

on:
  push:
    paths-ignore:
      - '*.md'
      - 'README.md'
      - 'pyproject.toml'
      - 'poetry.lock'
      - 'Makefile'
      - 'LICENSE'
      - '.github/ISSUE_TEMPLATE/**'
      - '.gitignore'
      - 'docs/**'
      - 'examples/**'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        fsspec-version: ["2023.5.0", "2024.9.0", "2024.10.0", "2025.2.0"]
        bucket-name: ["proton-ci"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        set -x
        python -m pip install --upgrade pip
        pip install --user poetry
        poetry lock
        poetry install --with dev
        poetry add fsspec==${{ matrix.fsspec-version }}
        poetry show fsspec
    - name: Prepare Env
      run: |
        echo "Preparing environment variables"
        echo "TOS_ACCESS_KEY=${{ secrets.TOS_ACCESS_KEY }}" >> $GITHUB_ENV
        echo "TOS_SECRET_KEY=${{ secrets.TOS_SECRET_KEY }}" >> $GITHUB_ENV
        echo "TOS_REGION=${{ vars.TOS_REGION }}" >> $GITHUB_ENV
        echo "TOS_ENDPOINT=${{ vars.TOS_ENDPOINT }}" >> $GITHUB_ENV
        echo "TOSFS_LOGGING_LEVEL=${{ vars.TOSFS_LOGGING_LEVEL }}" >> $GITHUB_ENV
        echo "TOS_SDK_LOGGING_LEVEL=${{ vars.TOS_SDK_LOGGING_LEVEL }}" >> $GITHUB_ENV
        echo "TOS_BUCKET=${{ matrix.bucket-name }}" >> $GITHUB_ENV
    - name: Run tests
      run: make test
